---
title: "plot_grbs_figure1"
author: "Nathan Harmston"
output: html_document
---

```{r global_options, echo=FALSE}
  short=FALSE #if short==TRUE, do not echo code chunks
  debug=FALSE
  knitr::opts_chunk$set(fig.width=12, fig.height=8, fig.path='./Figures/',
               echo=!short, warning=debug, message=debug, dev=c("png", "pdf"))
```

```{r echo=FALSE}
library(rtracklayer)
library(ggplot2)
library(reshape)
library(marray)
library(stringr)
library(gridExtra)
library(Gviz)
library(GenomicFeatures)
library(biomaRt)

figure2bpp = function(x){
  return (x + theme_bw() +  
  theme(axis.text.x=element_blank(), axis.title.y=element_blank(), axis.title.x=element_blank(),
        axis.text.y=element_blank(), line = element_blank(), panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(), panel.border = element_blank(), panel.background = element_blank(), legend.position="none", plot.margin = unit(c(0,0,0,0),"cm")) )
}

import.cnes = function(fn, target){
    tmp = str_split(fn, "/")
    tmp = str_split(tmp[[1]][ length(tmp[[1]])], "_")
    species1 = tmp[[1]][2]
    species2 = tmp[[1]][3]
    tmp  = read.table(fn)
  
    if(target == species1){
        return( GRanges(tmp[,1], IRanges(tmp[,2]+1, tmp[,3]), name=paste(tmp[,4], paste(tmp[,5]+1, tmp[,6], sep="-"), sep=":"), origin.chr=as.character(tmp[,4])) )
    }else{
        return( GRanges(tmp[,4], IRanges(tmp[,5]+1, tmp[,6]), name=paste(tmp[,1], paste(tmp[,2]+1, tmp[,3], sep="-"), sep=":"), origin.chr=as.character(tmp[,1])) )
    }
}
```

```{r loadGRBs}
galGal4.grbs = import.bed("data/GRBs/hg19_galGal4_70_50/hg19_galGal4_70_50.final.bed", genome="hg19")
galGal4.grbs = galGal4.grbs[ seqnames(galGal4.grbs) != "chrY"]
galGal4.grbs = galGal4.grbs[ order(width(galGal4.grbs), decreasing=TRUE)]
grbs.resized = resize(galGal4.grbs, fix="center", width=8e6)
binsize= 5000
bins = IRanges(breakInChunks(8e6, binsize))
```

```{r loadAnnotations}
hg19.ens.db = loadDb("/Users/nph/Dropbox/Topological organisation of genomic regulatory blocks/hg19_ensembl.sqlite")
ens.genes = genes(hg19.ens.db)
human = useMart(dataset="hsapiens_gene_ensembl", biomart="ENSEMBL_MART_ENSEMBL", host="feb2014.archive.ensembl.org")
bm.annotations = getBM(attributes=c("ensembl_gene_id", "gene_biotype", "hgnc_symbol", "description", "status"), mart=human, filters="ensembl_gene_id", values=ens.genes$gene_id, uniqueRows=TRUE)
ens.genes$hgnc_symbol = bm.annotations$hgnc_symbol[ match(ens.genes$gene_id, bm.annotations$ensembl_gene_id) ]
ens.genes$gene_biotype = bm.annotations$gene_biotype[ match(ens.genes$gene_id, bm.annotations$ensembl_gene_id) ]
ens.genes$description = bm.annotations$description[ match(ens.genes$gene_id, bm.annotations$ensembl_gene_id) ]
ens.genes$status = bm.annotations$status[ match(ens.genes$gene_id, bm.annotations$ensembl_gene_id) ]
ens.genes = ens.genes[ seqnames(ens.genes) %in% c(paste("chr", 1:22, sep=""), "chrX", "chrY")]
ens.genes = ens.genes[ ens.genes$gene_biotype %in% c( "protein_coding", "miRNA" ) ]

```

```{r generatebasematrix}
plot.base = matrix(0, ncol=length(bins), nrow=length(grbs.resized))
for(i in 1:length(grbs.resized)){
    ol = findOverlaps(GRanges(seqnames(grbs.resized[i]), IRanges(start(grbs.resized[i])+start(bins), start(grbs.resized[i])+end(bins)), strand="*" ), galGal4.grbs[i])
    plot.base[i,unique(queryHits(ol))] = 1
}
```

Make basic version of explanation of method for identifying enriched regions of syntenic CNEs and stitching them together. 
```{r figureS1b}
genome = "hg19"
chr="chr1"

start = 56136940
start=56136947
end=65569360 

axisTrack <- GenomeAxisTrack()
ideoTrack <- IdeogramTrack( chromosome=chr, genome=genome)

geneTrack = AnnotationTrack(ens.genes, genome="hg19", name="Ensembl Genes", id=ifelse(ens.genes$hgnc_symbol=="", " ", ens.genes$hgnc_symbol))
displayPars(geneTrack) <- list(showFeatureId=TRUE, fill = "deepskyblue", fontcolor.feature = "black", fontsize=9, just.group="below")

cnes  = import.cnes("data/cnes/cne2wBf_galGal4_hg19_35_50.asc", target="hg19")
cneTrack = AnnotationTrack(subsetByOverlaps(cnes, GRanges(chr, IRanges(start - 500000, end + 500000))), stacking="dense", genome=genome, chromosome=chr)

galGal4.70.50.density.bw = import("data/densities/HCNE_density_hg19_galGal4_70pc_50col.bigWig")

density_chicken <- DataTrack(range = galGal4.70.50.density.bw, genome = "hg19", type = "horizon", chromosome = chr, name = "70%/50bp",  fill.horizon = c("#B41414", "#E03231", "#F7A99C", "yellow", "orange", "red"), 
                                      separator=1, lwd=0.5, ylim=c(0,12),
                                      horizon.origin=0, horizon.scale=6)

raw = import.bed("data/GRBs/hg19_galGal4_70_50/hg19_galGal4_70_50_raw.bed", genome="hg19")
distance = import.bed("data/GRBs/hg19_galGal4_70_50/hg19_galGal4_70_50_0.98_distance.bed")
grborigin.distance = import.bed("data/GRBs/hg19_galGal4_70_50/hg19_galGal4_70_50_0.98_hmm.grborigin.distance.bed")
final_merged = import.bed("data/GRBs/hg19_galGal4_70_50/hg19_galGal4_70_50_0.98_final_merged.bed")
orphan_merged = import.bed("data/GRBs/hg19_galGal4_70_50/hg19_galGal4_70_50_0.98_orphan_merged.bed")
final = import.bed("data/GRBs/hg19_galGal4_70_50/hg19_galGal4_70_50.final.bed")

rawTrack = AnnotationTrack(raw, chromosome = chr, name="RAW")
distanceTrack = AnnotationTrack(distance, chromosome = chr, name="DIST")
grborigin.distanceTrack = AnnotationTrack(grborigin.distance, chromosome = chr, name="SPLIT")

final_mergedTrack  = AnnotationTrack(final_merged , chromosome = chr, name="MERGED")
orphan_mergedTrack = AnnotationTrack(orphan_merged, chromosome = chr, name="ORPHAN")
finalTrack = AnnotationTrack(final, chromosome = chr, name="FINAL")

displayPars(rawTrack) = list(col="black")
displayPars(distanceTrack) = list(col="black")
displayPars(grborigin.distanceTrack) = list(col="black")
displayPars(final_mergedTrack) = list(col="black")
displayPars(orphan_mergedTrack) = list(col="black")
displayPars(finalTrack) = list(col="black")

plotTracks(list(axisTrack, ideoTrack,
                density_chicken,
                cneTrack,
                geneTrack,
                rawTrack,
                distanceTrack,
                grborigin.distanceTrack,
                final_mergedTrack,
                orphan_mergedTrack,
                finalTrack
                ), chromosome=chr, from=start, to=end)
```

```{r figure1b}
plot.base.melt = melt(plot.base)
figure1b = figure2bpp(ggplot(plot.base.melt, aes(x = X2, y = rev(X1), fill = value)) + geom_tile() +  scale_fill_gradient2(low = "white", high = "gray50", midpoint = 0))
figure1b
```

```{r figure1cpreparation}
galGal4.70.50.density.bw = import("data/densities/HCNE_density_hg19_galGal4_70pc_50col.bigWig")
galGal4.80.50.density.bw = import("data/densities/HCNE_density_hg19_galGal4_80pc_50col.bigWig")
galGal4.90.50.density.bw = import("data/densities/HCNE_density_hg19_galGal4_90pc_50col.bigWig")
monDom5.80.50.density.bw = import("data/densities/HCNE_density_hg19_monDom5_80pc_50col.bigWig")
lepOcu1.70.30.density.bw = import("data/densities/HCNE_density_hg19_LepOcu1_70pc_30col.bigWig")

galGal4.70.50.cne.density.cov = coverage(galGal4.70.50.density.bw, weight="score")
galGal4.80.50.cne.density.cov = coverage(galGal4.80.50.density.bw, weight="score")
galGal4.90.50.cne.density.cov = coverage(galGal4.90.50.density.bw, weight="score")
monDom5.80.50.cne.density.cov = coverage(monDom5.80.50.density.bw, weight="score")
lepOcu1.70.30.cne.density.cov = coverage(lepOcu1.70.30.density.bw, weight="score")

galGal4.70.50.cnes  = import.cnes("data/cnes/cne2wBf_galGal4_hg19_35_50.asc", target="hg19")
galGal4.80.50.cnes  = import.cnes("data/cnes/cne2wBf_galGal4_hg19_40_50.asc", target="hg19")
galGal4.90.50.cnes  = import.cnes("data/cnes/cne2wBf_galGal4_hg19_45_50.asc", target="hg19")
monDom5.80.50.cnes  = import.cnes("data/cnes/cne2wBf_hg19_monDom5_40_50.asc", target="hg19")
lepOcu1.70.30.cnes  = import.cnes("data/cnes/cne2wBf_LepOcu1_hg19_21_30.asc", target="hg19")

plot.cne.galGal4.70.50 = matrix(0, ncol=length(bins), nrow=length(grbs.resized))
plot.cne.galGal4.80.50 = matrix(0, ncol=length(bins), nrow=length(grbs.resized))
plot.cne.galGal4.90.50 = matrix(0, ncol=length(bins), nrow=length(grbs.resized))
plot.cne.monDom5.80.50 = matrix(0, ncol=length(bins), nrow=length(grbs.resized))
plot.cne.lepOcu1.70.30 = matrix(0, ncol=length(bins), nrow=length(grbs.resized))

plot.density.mean.galGal4.70.50 = matrix(0, ncol=length(bins), nrow=length(grbs.resized))
plot.density.mean.galGal4.80.50 = matrix(0, ncol=length(bins), nrow=length(grbs.resized))
plot.density.mean.galGal4.90.50 = matrix(0, ncol=length(bins), nrow=length(grbs.resized))
plot.density.mean.monDom5.80.50 = matrix(0, ncol=length(bins), nrow=length(grbs.resized))
plot.density.mean.lepOcu1.70.30 = matrix(0, ncol=length(bins), nrow=length(grbs.resized))

plot.density.max.galGal4.70.50 = matrix(0, ncol=length(bins), nrow=length(grbs.resized))
plot.density.max.galGal4.80.50 = matrix(0, ncol=length(bins), nrow=length(grbs.resized))
plot.density.max.galGal4.90.50 = matrix(0, ncol=length(bins), nrow=length(grbs.resized))
plot.density.max.monDom5.80.50 = matrix(0, ncol=length(bins), nrow=length(grbs.resized))
plot.density.max.lepOcu1.70.30 = matrix(0, ncol=length(bins), nrow=length(grbs.resized))


binned.grbs = list()
for(i in 1:length(galGal4.grbs)){
      binned.grbs[[i]] = GRanges(seqnames(grbs.resized[i]), IRanges(start(grbs.resized[i])+start(bins), start(grbs.resized[i])+end(bins)), strand="*" )
      plot.density.mean.galGal4.70.50[i, ] = viewMeans(Views(galGal4.70.50.cne.density.cov[[as.character(unique(seqnames(grbs.resized[i])))]], 
                     						    as(binned.grbs[[i]], "RangesList")[[as.character(unique(seqnames(grbs.resized[i])))]]))
      plot.density.mean.galGal4.80.50[i, ] = viewMeans(Views(galGal4.80.50.cne.density.cov[[as.character(unique(seqnames(grbs.resized[i])))]], 
                       					    as(binned.grbs[[i]], "RangesList")[[as.character(unique(seqnames(grbs.resized[i])))]]))
      plot.density.mean.galGal4.90.50[i, ] = viewMeans(Views(galGal4.90.50.cne.density.cov[[as.character(unique(seqnames(grbs.resized[i])))]], 
                       					    as(binned.grbs[[i]], "RangesList")[[as.character(unique(seqnames(grbs.resized[i])))]]))
      plot.density.mean.monDom5.80.50[i, ] = viewMeans(Views(monDom5.80.50.cne.density.cov[[as.character(unique(seqnames(grbs.resized[i])))]], 
                       					    as(binned.grbs[[i]], "RangesList")[[as.character(unique(seqnames(grbs.resized[i])))]]))
      plot.density.mean.lepOcu1.70.30[i, ] = viewMeans(Views(lepOcu1.70.30.cne.density.cov[[as.character(unique(seqnames(grbs.resized[i])))]], 
                       					    as(binned.grbs[[i]], "RangesList")[[as.character(unique(seqnames(grbs.resized[i])))]]))
  
        plot.density.max.galGal4.70.50[i, ] = viewMaxs(Views(galGal4.70.50.cne.density.cov[[as.character(unique(seqnames(grbs.resized[i])))]], 
                       					    as(binned.grbs[[i]], "RangesList")[[as.character(unique(seqnames(grbs.resized[i])))]]))
      plot.density.max.galGal4.80.50[i, ] = viewMaxs(Views(galGal4.80.50.cne.density.cov[[as.character(unique(seqnames(grbs.resized[i])))]], 
                       					    as(binned.grbs[[i]], "RangesList")[[as.character(unique(seqnames(grbs.resized[i])))]]))
      plot.density.max.galGal4.90.50[i, ] = viewMaxs(Views(galGal4.90.50.cne.density.cov[[as.character(unique(seqnames(grbs.resized[i])))]], 
                       					    as(binned.grbs[[i]], "RangesList")[[as.character(unique(seqnames(grbs.resized[i])))]]))
      plot.density.max.monDom5.80.50[i, ] = viewMaxs(Views(monDom5.80.50.cne.density.cov[[as.character(unique(seqnames(grbs.resized[i])))]], 
                       					    as(binned.grbs[[i]], "RangesList")[[as.character(unique(seqnames(grbs.resized[i])))]]))
      plot.density.max.lepOcu1.70.30[i, ] = viewMaxs(Views(lepOcu1.70.30.cne.density.cov[[as.character(unique(seqnames(grbs.resized[i])))]], 
                       					    as(binned.grbs[[i]], "RangesList")[[as.character(unique(seqnames(grbs.resized[i])))]]))
  
      plot.cne.galGal4.70.50[i, ] = countOverlaps(binned.grbs[[i]], galGal4.70.50.cnes)
      plot.cne.galGal4.80.50[i, ] = countOverlaps(binned.grbs[[i]], galGal4.80.50.cnes)
      plot.cne.galGal4.90.50[i, ] = countOverlaps(binned.grbs[[i]], galGal4.90.50.cnes)
      plot.cne.monDom5.80.50[i, ] = countOverlaps(binned.grbs[[i]], monDom5.80.50.cnes)
      plot.cne.lepOcu1.70.30[i, ] = countOverlaps(binned.grbs[[i]], lepOcu1.70.30.cnes)  
}

figure1cpp = function(x){
 x + geom_tile() +  theme_bw() +  theme(axis.title.y=element_blank(), axis.title.x=element_blank(),
                                          axis.text.y=element_blank(), line = element_blank(), 
                                          legend.position="none",
                                          panel.grid.major = element_blank(),  panel.grid.minor = element_blank(), 
                                          panel.border = element_blank(), panel.background = element_blank(), 
                                          plot.margin = unit(c(0,0,0,0),"cm"), axis.text.x = element_blank()) 
}

legend.position="none"

plot.density.mean.galGal4.70.50.melt = melt(plot.density.mean.galGal4.70.50)
plot.density.mean.galGal4.70.50.melt$value = log(plot.density.mean.galGal4.70.50.melt$value + 1)
ggplot.density.mean.galGal4.70.50 = figure1cpp(ggplot(plot.density.mean.galGal4.70.50.melt, aes(x = X2, y = rev(X1), fill = value)) +  scale_fill_gradient2(low = "white", high = "red", midpoint = 0, limits=c(0,log(18)))) 

plot.density.mean.galGal4.80.50.melt = melt(plot.density.mean.galGal4.80.50)
plot.density.mean.galGal4.80.50.melt$value = log(plot.density.mean.galGal4.80.50.melt$value + 1)
ggplot.density.mean.galGal4.80.50 = figure1cpp(ggplot(plot.density.mean.galGal4.80.50.melt, aes(x = X2, y = rev(X1), fill = value)) + scale_fill_gradient2(low = "white", high = "red", midpoint = 0, limits=c(0,log(18)))) 

plot.density.mean.galGal4.90.50.melt = melt(plot.density.mean.galGal4.90.50)
plot.density.mean.galGal4.90.50.melt$value = log(plot.density.mean.galGal4.90.50.melt$value + 1)
ggplot.density.mean.galGal4.90.50 = figure1cpp(ggplot(plot.density.mean.galGal4.90.50.melt, aes(x = X2, y = rev(X1), fill = value))  +  scale_fill_gradient2(low = "white", high = "red", midpoint = 0, limits=c(0,log(18)))) 

plot.density.mean.monDom5.80.50.melt = melt(plot.density.mean.monDom5.80.50)
plot.density.mean.monDom5.80.50.melt$value = log(plot.density.mean.monDom5.80.50.melt$value + 1)
ggplot.density.mean.monDom5.80.50 = figure1cpp(ggplot(plot.density.mean.monDom5.80.50.melt, aes(x = X2, y = rev(X1), fill = value))  +   scale_fill_gradient2(low = "white", high = "darkorchid4", midpoint = 0, limits=c(0,log(18)))) 

plot.density.mean.lepOcu1.70.30.melt = melt(plot.density.mean.lepOcu1.70.30)
plot.density.mean.lepOcu1.70.30.melt$value = log(plot.density.mean.lepOcu1.70.30.melt$value + 1)
ggplot.density.mean.lepOcu1.70.30 = figure1cpp(ggplot(plot.density.mean.lepOcu1.70.30.melt, aes(x = X2, y = rev(X1), fill = value))  +   scale_fill_gradient2(low = "white", high = "seagreen", midpoint = 0, limits=c(0,log(18)))) 
```

```{r figure1c}
par(mar=c(0,0,0,0))
grid.arrange(ggplot.density.mean.galGal4.70.50, 
             ggplot.density.mean.galGal4.80.50, 
             ggplot.density.mean.galGal4.90.50,
             ggplot.density.mean.monDom5.80.50,
             ggplot.density.mean.lepOcu1.70.30, 
             ncol=5)
```

```{r figure1c_hg70}
ggplot.density.mean.galGal4.70.50
```
```{r figure1c_hg80}
ggplot.density.mean.galGal4.80.50
```
```{r figure1c_hg90}
ggplot.density.mean.galGal4.80.50
```
```{r figure1cd_hm80}
ggplot.density.mean.monDom5.80.50
```
```{r figure1c_hl_70}
ggplot.density.mean.lepOcu1.70.30
```

Plot overlapping calls of GRBS overlaid GRBs identified using hg19-galGal4 70%-50bp
```{r figure1dprep}
monDom5.grbs = import.bed("data/GRBs/hg19_monDom5_80_50/hg19_monDom5_80_50.final.bed", genome="hg19")
lepOcu1.grbs = import.bed("data/GRBs/hg19_lepOcu1_70_30/hg19_lepOcu1_70_30.final.bed", genome="hg19")

all.grbs = c(galGal4.grbs, lepOcu1.grbs, monDom5.grbs)
all.grbs.cov = coverage(all.grbs)

plot.grbs = matrix(0, ncol=length(bins), nrow=length(grbs.resized))
for(i in 1:length(grbs.resized)){
    binned.grbs[[i]] = GRanges(seqnames(grbs.resized[i]), IRanges(start(grbs.resized[i])+start(bins), start(grbs.resized[i])+end(bins)), strand="*" )
     
    plot.grbs[i, ] = viewMeans(Views(all.grbs.cov[[as.character(unique(seqnames(binned.grbs[[i]])))]], 
                         				    as(binned.grbs[[i]], "RangesList")[[as.character(unique(seqnames(binned.grbs[[i]])))]]))
}
plot.grbs.melt = melt(plot.grbs)
plot.grbs.melt$code = cut(plot.grbs.melt$value, breaks=seq(-0.5, 3.5, by=1))
```

```{r figure1d}
figure1d = ggplot(plot.grbs.melt, 
       aes(x = X2, y = rev(X1), fill = code)) + geom_tile() +  theme_bw() + scale_fill_manual(values = c("#FFFFFF", "#6BAED6", "#2171B5", "#08519C"), na.value="black") + 
  theme(axis.title.y=element_blank(), axis.title.x=element_blank(),
        axis.text.y=element_blank(), line = element_blank(), panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(), panel.border = element_blank(), 
        panel.background = element_blank(), legend.position="none", 
        plot.margin = unit(c(0,0,0,0),"cm"), axis.text.x = element_blank()) 
figure1d
```


```{r bottompanel}
par(mar=c(0,0,0,0))
grid.arrange(figure1b,
            ggplot.density.mean.galGal4.70.50, 
             ggplot.density.mean.galGal4.80.50, 
             ggplot.density.mean.galGal4.90.50,
             ggplot.density.mean.monDom5.80.50,
             ggplot.density.mean.lepOcu1.70.30, 
             figure1d,
             ncol=7)

```

Plot of MEIS1 GRB
```{r figure1a}
grbs = GRanges()
final.galGal4.70.50 = import.bed("data/GRBs/hg19_galGal4_70_50/hg19_galGal4_70_50.final.bed")
final.galGal4.70.50$id = "galGal4.70.50"
final.galGal4.80.50 = import.bed("data/GRBs/hg19_galGal4_80_50/hg19_galGal4_80_50.final.bed")
final.galGal4.80.50$id = "galGal4.80.50"
final.galGal4.90.50 = import.bed("data/GRBs/hg19_galGal4_90_50/hg19_galGal4_90_50.final.bed")
final.galGal4.90.50$id = "galGal4.90.50"
final.monDom5.80.50 = import.bed("data/GRBs/hg19_monDom5_80_50/hg19_monDom5_80_50.final.bed")
final.monDom5.80.50$id = "monDom5.80.50"
final.lepOcu1.70.30 = import.bed("data/GRBs/hg19_lepOcu1_70_30/hg19_lepOcu1_70_30.final.bed")
final.lepOcu1.70.30$id = "lepOcu1.70.30"
grbs = c(final.galGal4.70.50, final.galGal4.80.50, final.galGal4.90.50,
        final.monDom5.80.50, final.lepOcu1.70.30)  

grbTrack = AnnotationTrack(grbs, chromosome = "chr1", name="GRBs", groupAnnotation="id")

axisTrack <- GenomeAxisTrack()
  
galGal4.70.50.density.bw = import("data/densities/HCNE_density_hg19_galGal4_70pc_50col.bigWig")
galGal4.70.50.density.bw = galGal4.70.50.density.bw[ seqnames(galGal4.70.50.density.bw) %in% c( paste("chr", 1:22, sep=""), "chrX", "chrY"), ]
galGal4.80.50.density.bw = import("data/densities/HCNE_density_hg19_galGal4_80pc_50col.bigWig")
galGal4.80.50.density.bw = galGal4.80.50.density.bw[ seqnames(galGal4.70.50.density.bw) %in% c( paste("chr", 1:22, sep=""), "chrX", "chrY"), ]
galGal4.90.50.density.bw = import("data/densities/HCNE_density_hg19_galGal4_90pc_50col.bigWig")
galGal4.90.50.density.bw = galGal4.90.50.density.bw[ seqnames(galGal4.70.50.density.bw) %in% c( paste("chr", 1:22, sep=""), "chrX", "chrY"), ]
monDom5.80.50.density.bw = import("data/densities/HCNE_density_hg19_monDom5_80pc_50col.bigWig")
monDom5.80.50.density.bw = monDom5.80.50.density.bw[ seqnames(monDom5.80.50.density.bw) %in% c( paste("chr", 1:22, sep=""), "chrX", "chrY"), ]
lepOcu1.70.30.density.bw = import("data/densities/HCNE_density_hg19_LepOcu1_70pc_30col.bigWig")
lepOcu1.70.30.density.bw = lepOcu1.70.30.density.bw[ seqnames(lepOcu1.70.30.density.bw) %in% c( paste("chr", 1:22, sep=""), "chrX", "chrY"), ]

cne.densities.data = galGal4.70.50.density.bw
cne.densities.data$galGal4.70.50 = cne.densities.data$score
cne.densities.data$score = NULL
cne.densities.data$galGal4.80.50 = galGal4.80.50.density.bw$score
cne.densities.data$galGal4.90.50 = galGal4.90.50.density.bw$score
cne.densities.data$monDom5.80.50 = monDom5.80.50.density.bw$score
cne.densities.data$lepOcu1.70.30 = lepOcu1.70.30.density.bw$score

cne.densities.data.track <- DataTrack(range = cne.densities.data, genome = "hg19", 
                                      type = "horizon", chromosome = "chr2", 
                                      name = "densities", groups=c("2", "3", "4", "5", "1"),
                                      col=c("red", "red", "red", "darkorchid4", "seagreen"), 
                                      fill.horizon = c("#B41414", "#E03231", "#F7A99C", "yellow", 
                                                       "orange", "red"), 
                                      separator=1, lwd=0.5, ylim=c(0,12),
                                      horizon.origin=0, horizon.scale=6)

geneTrack = AnnotationTrack(ens.genes, genome="hg19", name="Ensembl Genes", id=ifelse(ens.genes$hgnc_symbol=="", " ", ens.genes$hgnc_symbol))
displayPars(geneTrack) <- list(showFeatureId=TRUE, fill = "deepskyblue", fontcolor.feature = "black", fontsize=9, just.group="below")

chr = "chr2"
start = 65270900
end = 68723490
cnes  = import.cnes("data/cnes/cne2wBf_galGal4_hg19_35_50.asc", target="hg19")
cne.galGal4.70.50.Track = AnnotationTrack(reduce(subsetByOverlaps(cnes, GRanges(chr, IRanges(start - 500000, end + 500000)))), stacking="squish", genome="hg19", chromosome=chr)
cnes  = import.cnes("data/cnes/cne2wBf_galGal4_hg19_40_50.asc", target="hg19")
cne.galGal4.80.50.Track = AnnotationTrack(reduce(subsetByOverlaps(cnes, GRanges(chr, IRanges(start - 500000, end + 500000)))), stacking="squish", genome="hg19", chromosome=chr)
cnes  = import.cnes("data/cnes/cne2wBf_galGal4_hg19_45_50.asc", target="hg19")
cne.galGal4.90.50.Track = AnnotationTrack(reduce(subsetByOverlaps(cnes, GRanges(chr, IRanges(start - 500000, end + 500000)))), stacking="squish", genome="hg19", chromosome=chr)
cnes  = import.cnes("data/cnes/cne2wBf_hg19_monDom5_40_50.asc", target="hg19")
cne.monDom5.80.50.Track = AnnotationTrack(reduce(subsetByOverlaps(cnes, GRanges(chr, IRanges(start - 500000, end + 500000)))), stacking="squish", genome="hg19", chromosome=chr)
cnes  = import.cnes("data/cnes/cne2wBf_LepOcu1_hg19_21_30.asc", target="hg19")
cne.lepOcu1.70.30.Track = AnnotationTrack(reduce(subsetByOverlaps(cnes, GRanges(chr, IRanges(start - 500000, end + 500000)))), stacking="squish", genome="hg19", chromosome=chr)

displayPars(cne.monDom5.80.50.Track) = list(col="darkorchid4", col.line="black")
displayPars(cne.galGal4.90.50.Track) = list(col="coral", col.line="black")
displayPars(cne.galGal4.80.50.Track) = list(col="indianred", col.line="black")
displayPars(cne.galGal4.70.50.Track) = list(col="red", col.line="black")
displayPars(cne.lepOcu1.70.30.Track) = list(col="seagreen", col.line="black")

royotrack = AnnotationTrack(import.bed("data/Royo.bed"), stacking="squish", genome="hg19", chromosome=chr)

plotTracks(list(axisTrack, cne.densities.data.track,
                cne.monDom5.80.50.Track, cne.galGal4.90.50.Track, cne.galGal4.80.50.Track, cne.galGal4.70.50.Track, cne.lepOcu1.70.30.Track, grbTrack, geneTrack, royotrack), 
            collapseTranscripts=TRUE, shape="arrow", 
            chromosome=chr, 
            from=start, to=end, legend=TRUE)
```